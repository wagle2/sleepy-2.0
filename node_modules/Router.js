/*

Router.js

Functions :
check(commands, 'b'/'w', room_list, r)
    commands : 반응할 명령어의 목록.
    'b'/'w' : 방 필터링 모드 , 'b' - blackList mode, 'w' - whiteList mode. 
    room_list : 필터링 적용할 방 리스트.
    r : r..

route(module_name, r)
    module_name : 연결할 모듈의 파일 이름.(확장자 js 미포함) 
    r : r..

Usage:
function response(...){

    if(Router.check(...)){
        return Router.route(...)
    }
    if(Router.check(...)){
        return Router.route(...)
    }
    ...
}

*/

var File = require("File.js")

var Router = {
    ROUTES_FOLDER : "sdcard/kbot/node_modules/routes/",
    routesMap : new Map(),

    check : function (command_list, mode, room_list, r){
        var cmd = r.msg.split(" ")[0]
        if(command_list.indexOf(cmd) != -1){//if cmds contain cmd  ..TODO : add Array​.prototype​.includes()
            var isContain;
            isContain = (room_list.indexOf(r.room) != -1) ? true : false
            if(mode == 'b'){//blackList mode
                return !isContain;
            }
            else if (mode == 'w'){ //whiteList mode
                return isContain;
            }
        }
        return false;
    },

    getRoutesList : function() {
        return new java.io.File(this.ROUTES_FOLDER).listFiles().map((v) => (String(v.getName()).split(".")[0]))
    },

    load : function (module) {
        var mm = this.routesMap.get(module);
        if (mm) {
            mm = eval(File.read(this.ROUTES_FOLDER + module + ".js"))
            this.routesMap.set(module,mm)
            return mm
        }
        return null
    },

    loadAll : function() {
        var routesList = this.getRoutesList()
        for (var i in routesList) {
            this.routesMap.set(routesList[i], eval(File.read(this.ROUTES_FOLDER + routesList[i] + ".js")))
        }
    },

    route : function (moduleName , r){
        var args = r.msg.split(" ").slice(1);
        var moduleClass = this.routesMap.get(moduleName)
        var moduleStart = new moduleClass(r,args)
        var final = moduleStart.final()
        return;
    }

}
module.exports = Router;

Router.loadAll();

